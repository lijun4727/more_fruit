// Code generated by protoc-gen-go. DO NOT EDIT.
// source: business.proto

package common

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ERROR_CODE int32

const (
	ERROR_CODE_NONE                ERROR_CODE = 0
	ERROR_CODE_INTERNAL_ERROR      ERROR_CODE = 1
	ERROR_CODE_USERNAME_INVALID    ERROR_CODE = 2
	ERROR_CODE_PASSWORD_INVALID    ERROR_CODE = 3
	ERROR_CODE_IDENTITY_INVALID    ERROR_CODE = 4
	ERROR_CODE_PHONE_INVALID       ERROR_CODE = 5
	ERROR_CODE_USERNAME_NO_EXIST   ERROR_CODE = 6
	ERROR_CODE_PASSWORD_ERROR      ERROR_CODE = 7
	ERROR_CODE_USERNAME_EXIST      ERROR_CODE = 8
	ERROR_CODE_SHOP_NAME_INVALID   ERROR_CODE = 9
	ERROR_CODE_SHOP_DESC_OVER_LEN  ERROR_CODE = 10
	ERROR_CODE_ACCOUNT_ID_NO_EXIST ERROR_CODE = 11
	ERROR_CODE_IMAGE_EXIST         ERROR_CODE = 12
	ERROR_CODE_SHOP_ID_NO_EXIST    ERROR_CODE = 13
)

var ERROR_CODE_name = map[int32]string{
	0:  "NONE",
	1:  "INTERNAL_ERROR",
	2:  "USERNAME_INVALID",
	3:  "PASSWORD_INVALID",
	4:  "IDENTITY_INVALID",
	5:  "PHONE_INVALID",
	6:  "USERNAME_NO_EXIST",
	7:  "PASSWORD_ERROR",
	8:  "USERNAME_EXIST",
	9:  "SHOP_NAME_INVALID",
	10: "SHOP_DESC_OVER_LEN",
	11: "ACCOUNT_ID_NO_EXIST",
	12: "IMAGE_EXIST",
	13: "SHOP_ID_NO_EXIST",
}

var ERROR_CODE_value = map[string]int32{
	"NONE":                0,
	"INTERNAL_ERROR":      1,
	"USERNAME_INVALID":    2,
	"PASSWORD_INVALID":    3,
	"IDENTITY_INVALID":    4,
	"PHONE_INVALID":       5,
	"USERNAME_NO_EXIST":   6,
	"PASSWORD_ERROR":      7,
	"USERNAME_EXIST":      8,
	"SHOP_NAME_INVALID":   9,
	"SHOP_DESC_OVER_LEN":  10,
	"ACCOUNT_ID_NO_EXIST": 11,
	"IMAGE_EXIST":         12,
	"SHOP_ID_NO_EXIST":    13,
}

func (x ERROR_CODE) String() string {
	return proto.EnumName(ERROR_CODE_name, int32(x))
}

func (ERROR_CODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{0}
}

type AccountInfo struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Identity             string   `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountInfo) Reset()         { *m = AccountInfo{} }
func (m *AccountInfo) String() string { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()    {}
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{0}
}

func (m *AccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountInfo.Unmarshal(m, b)
}
func (m *AccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountInfo.Marshal(b, m, deterministic)
}
func (m *AccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountInfo.Merge(m, src)
}
func (m *AccountInfo) XXX_Size() int {
	return xxx_messageInfo_AccountInfo.Size(m)
}
func (m *AccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AccountInfo proto.InternalMessageInfo

func (m *AccountInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *AccountInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AccountInfo) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *AccountInfo) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ErrorCode struct {
	ErrCode              ERROR_CODE `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3,enum=common.ERROR_CODE" json:"err_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ErrorCode) Reset()         { *m = ErrorCode{} }
func (m *ErrorCode) String() string { return proto.CompactTextString(m) }
func (*ErrorCode) ProtoMessage()    {}
func (*ErrorCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{1}
}

func (m *ErrorCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorCode.Unmarshal(m, b)
}
func (m *ErrorCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorCode.Marshal(b, m, deterministic)
}
func (m *ErrorCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorCode.Merge(m, src)
}
func (m *ErrorCode) XXX_Size() int {
	return xxx_messageInfo_ErrorCode.Size(m)
}
func (m *ErrorCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorCode.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorCode proto.InternalMessageInfo

func (m *ErrorCode) GetErrCode() ERROR_CODE {
	if m != nil {
		return m.ErrCode
	}
	return ERROR_CODE_NONE
}

type Account struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{2}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Account) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Shop struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	AccountId            int64    `protobuf:"varint,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shop) Reset()         { *m = Shop{} }
func (m *Shop) String() string { return proto.CompactTextString(m) }
func (*Shop) ProtoMessage()    {}
func (*Shop) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{3}
}

func (m *Shop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shop.Unmarshal(m, b)
}
func (m *Shop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shop.Marshal(b, m, deterministic)
}
func (m *Shop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shop.Merge(m, src)
}
func (m *Shop) XXX_Size() int {
	return xxx_messageInfo_Shop.Size(m)
}
func (m *Shop) XXX_DiscardUnknown() {
	xxx_messageInfo_Shop.DiscardUnknown(m)
}

var xxx_messageInfo_Shop proto.InternalMessageInfo

func (m *Shop) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Shop) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Shop) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type Logo struct {
	OwnerId              int64    `protobuf:"varint,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	ImgId                int64    `protobuf:"varint,2,opt,name=img_id,json=imgId,proto3" json:"img_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Logo) Reset()         { *m = Logo{} }
func (m *Logo) String() string { return proto.CompactTextString(m) }
func (*Logo) ProtoMessage()    {}
func (*Logo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{4}
}

func (m *Logo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logo.Unmarshal(m, b)
}
func (m *Logo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logo.Marshal(b, m, deterministic)
}
func (m *Logo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logo.Merge(m, src)
}
func (m *Logo) XXX_Size() int {
	return xxx_messageInfo_Logo.Size(m)
}
func (m *Logo) XXX_DiscardUnknown() {
	xxx_messageInfo_Logo.DiscardUnknown(m)
}

var xxx_messageInfo_Logo proto.InternalMessageInfo

func (m *Logo) GetOwnerId() int64 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *Logo) GetImgId() int64 {
	if m != nil {
		return m.ImgId
	}
	return 0
}

type ShopImages struct {
	ShopId               int64    `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	ImgPaths             []string `protobuf:"bytes,2,rep,name=img_paths,json=imgPaths,proto3" json:"img_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopImages) Reset()         { *m = ShopImages{} }
func (m *ShopImages) String() string { return proto.CompactTextString(m) }
func (*ShopImages) ProtoMessage()    {}
func (*ShopImages) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{5}
}

func (m *ShopImages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopImages.Unmarshal(m, b)
}
func (m *ShopImages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopImages.Marshal(b, m, deterministic)
}
func (m *ShopImages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopImages.Merge(m, src)
}
func (m *ShopImages) XXX_Size() int {
	return xxx_messageInfo_ShopImages.Size(m)
}
func (m *ShopImages) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopImages.DiscardUnknown(m)
}

var xxx_messageInfo_ShopImages proto.InternalMessageInfo

func (m *ShopImages) GetShopId() int64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *ShopImages) GetImgPaths() []string {
	if m != nil {
		return m.ImgPaths
	}
	return nil
}

type Goods struct {
	ShopId               int64    `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	Quantity             int32    `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Goods) Reset()         { *m = Goods{} }
func (m *Goods) String() string { return proto.CompactTextString(m) }
func (*Goods) ProtoMessage()    {}
func (*Goods) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{6}
}

func (m *Goods) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goods.Unmarshal(m, b)
}
func (m *Goods) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goods.Marshal(b, m, deterministic)
}
func (m *Goods) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goods.Merge(m, src)
}
func (m *Goods) XXX_Size() int {
	return xxx_messageInfo_Goods.Size(m)
}
func (m *Goods) XXX_DiscardUnknown() {
	xxx_messageInfo_Goods.DiscardUnknown(m)
}

var xxx_messageInfo_Goods proto.InternalMessageInfo

func (m *Goods) GetShopId() int64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *Goods) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Goods) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Goods) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type Goodses struct {
	Goodses              []*Goods `protobuf:"bytes,1,rep,name=goodses,proto3" json:"goodses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Goodses) Reset()         { *m = Goodses{} }
func (m *Goodses) String() string { return proto.CompactTextString(m) }
func (*Goodses) ProtoMessage()    {}
func (*Goodses) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb4ce4f7d40c421f, []int{7}
}

func (m *Goodses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Goodses.Unmarshal(m, b)
}
func (m *Goodses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Goodses.Marshal(b, m, deterministic)
}
func (m *Goodses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Goodses.Merge(m, src)
}
func (m *Goodses) XXX_Size() int {
	return xxx_messageInfo_Goodses.Size(m)
}
func (m *Goodses) XXX_DiscardUnknown() {
	xxx_messageInfo_Goodses.DiscardUnknown(m)
}

var xxx_messageInfo_Goodses proto.InternalMessageInfo

func (m *Goodses) GetGoodses() []*Goods {
	if m != nil {
		return m.Goodses
	}
	return nil
}

func init() {
	proto.RegisterEnum("common.ERROR_CODE", ERROR_CODE_name, ERROR_CODE_value)
	proto.RegisterType((*AccountInfo)(nil), "common.AccountInfo")
	proto.RegisterType((*ErrorCode)(nil), "common.ErrorCode")
	proto.RegisterType((*Account)(nil), "common.Account")
	proto.RegisterType((*Shop)(nil), "common.Shop")
	proto.RegisterType((*Logo)(nil), "common.Logo")
	proto.RegisterType((*ShopImages)(nil), "common.ShopImages")
	proto.RegisterType((*Goods)(nil), "common.Goods")
	proto.RegisterType((*Goodses)(nil), "common.Goodses")
}

func init() {
	proto.RegisterFile("business.proto", fileDescriptor_fb4ce4f7d40c421f)
}

var fileDescriptor_fb4ce4f7d40c421f = []byte{
	// 650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdd, 0x4e, 0xdb, 0x4a,
	0x10, 0x26, 0xbf, 0x76, 0x26, 0x04, 0xc2, 0x00, 0x87, 0x1c, 0x8e, 0x8e, 0x84, 0x7c, 0x73, 0x10,
	0x3a, 0xa0, 0x2a, 0xdc, 0xb4, 0x95, 0x7a, 0x61, 0x12, 0x0b, 0xb6, 0x4a, 0xec, 0xc8, 0x0e, 0xb4,
	0xbd, 0xb2, 0x4c, 0x76, 0xeb, 0x58, 0xaa, 0xbd, 0xa9, 0xed, 0x88, 0xf6, 0xa1, 0xfa, 0x28, 0x7d,
	0xa7, 0x6a, 0x77, 0x63, 0x27, 0x54, 0x69, 0x2f, 0x7a, 0xb7, 0xf3, 0xcd, 0xf7, 0xcd, 0x8f, 0x67,
	0xc6, 0xb0, 0xf7, 0xb8, 0xcc, 0xa2, 0x84, 0x65, 0xd9, 0xd5, 0x22, 0xe5, 0x39, 0xc7, 0xe6, 0x8c,
	0xc7, 0x31, 0x4f, 0x8c, 0x2f, 0xd0, 0x36, 0x67, 0x33, 0xbe, 0x4c, 0x72, 0x92, 0x7c, 0xe4, 0xf8,
	0x0f, 0xb4, 0x96, 0x19, 0x4b, 0xfd, 0x24, 0x88, 0x59, 0xaf, 0x72, 0x56, 0x39, 0x6f, 0xb9, 0xba,
	0x00, 0xec, 0x20, 0x66, 0x78, 0x0a, 0xfa, 0x22, 0xc8, 0xb2, 0x27, 0x9e, 0xd2, 0x5e, 0x55, 0xf9,
	0x0a, 0x5b, 0xf8, 0x22, 0xca, 0x92, 0x3c, 0xca, 0xbf, 0xf6, 0x6a, 0xca, 0x57, 0xd8, 0x78, 0x04,
	0x8d, 0xc5, 0x9c, 0x27, 0xac, 0x57, 0x97, 0x0e, 0x65, 0x18, 0xaf, 0xa1, 0x65, 0xa5, 0x29, 0x4f,
	0x07, 0x9c, 0x32, 0xbc, 0x04, 0x9d, 0xa5, 0xa9, 0x3f, 0xe3, 0x54, 0xa5, 0xdd, 0xeb, 0xe3, 0x95,
	0xaa, 0xf0, 0xca, 0x72, 0x5d, 0xc7, 0xf5, 0x07, 0xce, 0xd0, 0x72, 0x35, 0x96, 0x4a, 0xba, 0x71,
	0x03, 0xda, 0xaa, 0xea, 0x3f, 0xae, 0xd8, 0x18, 0x43, 0xdd, 0x9b, 0xf3, 0x05, 0x22, 0xd4, 0x37,
	0xb4, 0xf2, 0x2d, 0x30, 0xca, 0xb2, 0xd9, 0x4a, 0x23, 0xdf, 0xf8, 0x2f, 0x40, 0xa0, 0x72, 0xfa,
	0x11, 0x95, 0x3d, 0xd6, 0xdc, 0xd6, 0x0a, 0x21, 0xd4, 0x78, 0x09, 0xf5, 0x11, 0x0f, 0x39, 0xfe,
	0x0d, 0x3a, 0x7f, 0x4a, 0x58, 0x2a, 0x48, 0x15, 0x49, 0xd2, 0xa4, 0x4d, 0x28, 0x1e, 0x43, 0x33,
	0x8a, 0x43, 0xe1, 0xa8, 0x4a, 0x47, 0x23, 0x8a, 0x43, 0x42, 0x8d, 0x1b, 0x00, 0x51, 0x08, 0x89,
	0x83, 0x90, 0x65, 0x78, 0x02, 0x5a, 0x36, 0xe7, 0x8b, 0xb5, 0xbc, 0x29, 0x4c, 0x42, 0x45, 0xa3,
	0x42, 0xbd, 0x08, 0xf2, 0x79, 0xd6, 0xab, 0x9e, 0xd5, 0xe4, 0x27, 0x8e, 0xc3, 0x89, 0xb0, 0x0d,
	0x0a, 0x8d, 0x5b, 0xce, 0xe9, 0x6f, 0xe4, 0x45, 0x9b, 0xd5, 0x2d, 0x6d, 0xd6, 0x36, 0xda, 0x3c,
	0x05, 0xfd, 0xf3, 0x32, 0x50, 0x83, 0x14, 0xf3, 0x6a, 0xb8, 0xa5, 0x6d, 0xf4, 0x41, 0x93, 0x59,
	0x58, 0x86, 0xff, 0x81, 0x16, 0xaa, 0x67, 0xaf, 0x72, 0x56, 0x3b, 0x6f, 0xf7, 0x3b, 0xc5, 0xbc,
	0x24, 0xc3, 0x2d, 0xbc, 0x17, 0xdf, 0xaa, 0x00, 0xeb, 0x11, 0xa2, 0x0e, 0x75, 0xdb, 0xb1, 0xad,
	0xee, 0x0e, 0x22, 0xec, 0x11, 0x7b, 0x6a, 0xb9, 0xb6, 0x39, 0xf2, 0x25, 0xa1, 0x5b, 0xc1, 0x23,
	0xe8, 0xde, 0x7b, 0x02, 0x1a, 0x5b, 0x3e, 0xb1, 0x1f, 0xcc, 0x11, 0x19, 0x76, 0xab, 0x02, 0x9d,
	0x98, 0x9e, 0xf7, 0xce, 0x71, 0x87, 0x25, 0x5a, 0x13, 0x28, 0x19, 0x5a, 0xf6, 0x94, 0x4c, 0x3f,
	0x94, 0x68, 0x1d, 0x0f, 0xa0, 0x33, 0xb9, 0x73, 0xec, 0xb5, 0xbc, 0x81, 0xc7, 0x70, 0x50, 0x06,
	0xb5, 0x1d, 0xdf, 0x7a, 0x4f, 0xbc, 0x69, 0xb7, 0x29, 0xf2, 0x97, 0x51, 0x55, 0x7e, 0x4d, 0x60,
	0x25, 0x55, 0xf1, 0x74, 0x21, 0xf7, 0xee, 0x9c, 0x89, 0xff, 0xac, 0xa8, 0x16, 0xfe, 0x05, 0x28,
	0xe1, 0xa1, 0xe5, 0x0d, 0x7c, 0xe7, 0xc1, 0x72, 0xfd, 0x91, 0x65, 0x77, 0x01, 0x4f, 0xe0, 0xd0,
	0x1c, 0x0c, 0x9c, 0x7b, 0x7b, 0xea, 0x93, 0xe1, 0x3a, 0x5f, 0x1b, 0xf7, 0xa1, 0x4d, 0xc6, 0xe6,
	0x6d, 0x11, 0x78, 0x57, 0x34, 0x20, 0x23, 0x6c, 0xd2, 0x3a, 0xfd, 0xb7, 0xd0, 0x59, 0xad, 0xf6,
	0x38, 0x48, 0x82, 0x90, 0xe1, 0x2b, 0xe8, 0x0c, 0x52, 0x16, 0xe4, 0xac, 0xd8, 0xf8, 0xc3, 0xe2,
	0x4b, 0x6f, 0x1c, 0xee, 0xe9, 0x41, 0x79, 0x2e, 0xc5, 0x4d, 0x19, 0x3b, 0xfd, 0x37, 0xb0, 0xbb,
	0xe2, 0x8c, 0x78, 0x18, 0x25, 0x78, 0x09, 0x0d, 0xf5, 0xd8, 0xff, 0x29, 0xc4, 0x76, 0xf9, 0xf7,
	0x8a, 0xda, 0xcc, 0x55, 0x21, 0x17, 0xd0, 0xb8, 0x59, 0x46, 0x9f, 0x28, 0xee, 0x16, 0x64, 0xe1,
	0xdc, 0x2a, 0xc5, 0xff, 0x41, 0xf3, 0x58, 0x2e, 0x0f, 0xa2, 0x64, 0x0b, 0x6b, 0x3b, 0xfb, 0x1a,
	0x74, 0x93, 0x52, 0x79, 0x00, 0x88, 0x9b, 0xc1, 0xd5, 0x4d, 0x6c, 0x17, 0xbd, 0x90, 0x22, 0xb5,
	0xf5, 0xfb, 0xcf, 0x96, 0xef, 0x17, 0x8a, 0xc7, 0xa6, 0xfc, 0xf5, 0x5d, 0xff, 0x08, 0x00, 0x00,
	0xff, 0xff, 0xa7, 0xf4, 0xd3, 0x70, 0x0c, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AccountManageClient is the client API for AccountManage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountManageClient interface {
	CreateAccount(ctx context.Context, in *AccountInfo, opts ...grpc.CallOption) (*ErrorCode, error)
}

type accountManageClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountManageClient(cc grpc.ClientConnInterface) AccountManageClient {
	return &accountManageClient{cc}
}

func (c *accountManageClient) CreateAccount(ctx context.Context, in *AccountInfo, opts ...grpc.CallOption) (*ErrorCode, error) {
	out := new(ErrorCode)
	err := c.cc.Invoke(ctx, "/common.AccountManage/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountManageServer is the server API for AccountManage service.
type AccountManageServer interface {
	CreateAccount(context.Context, *AccountInfo) (*ErrorCode, error)
}

// UnimplementedAccountManageServer can be embedded to have forward compatible implementations.
type UnimplementedAccountManageServer struct {
}

func (*UnimplementedAccountManageServer) CreateAccount(ctx context.Context, req *AccountInfo) (*ErrorCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}

func RegisterAccountManageServer(s *grpc.Server, srv AccountManageServer) {
	s.RegisterService(&_AccountManage_serviceDesc, srv)
}

func _AccountManage_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountManageServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.AccountManage/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountManageServer).CreateAccount(ctx, req.(*AccountInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountManage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.AccountManage",
	HandlerType: (*AccountManageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _AccountManage_CreateAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "business.proto",
}

// AccountLoginClient is the client API for AccountLogin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountLoginClient interface {
	Login(ctx context.Context, in *Account, opts ...grpc.CallOption) (*ErrorCode, error)
}

type accountLoginClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountLoginClient(cc grpc.ClientConnInterface) AccountLoginClient {
	return &accountLoginClient{cc}
}

func (c *accountLoginClient) Login(ctx context.Context, in *Account, opts ...grpc.CallOption) (*ErrorCode, error) {
	out := new(ErrorCode)
	err := c.cc.Invoke(ctx, "/common.AccountLogin/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountLoginServer is the server API for AccountLogin service.
type AccountLoginServer interface {
	Login(context.Context, *Account) (*ErrorCode, error)
}

// UnimplementedAccountLoginServer can be embedded to have forward compatible implementations.
type UnimplementedAccountLoginServer struct {
}

func (*UnimplementedAccountLoginServer) Login(ctx context.Context, req *Account) (*ErrorCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterAccountLoginServer(s *grpc.Server, srv AccountLoginServer) {
	s.RegisterService(&_AccountLogin_serviceDesc, srv)
}

func _AccountLogin_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountLoginServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.AccountLogin/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountLoginServer).Login(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountLogin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.AccountLogin",
	HandlerType: (*AccountLoginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AccountLogin_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "business.proto",
}

// ShopManageClient is the client API for ShopManage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShopManageClient interface {
	Build(ctx context.Context, in *Shop, opts ...grpc.CallOption) (*ErrorCode, error)
	SetLogo(ctx context.Context, in *Logo, opts ...grpc.CallOption) (*ErrorCode, error)
	AddImage(ctx context.Context, in *ShopImages, opts ...grpc.CallOption) (*ErrorCode, error)
	AddGoods(ctx context.Context, in *Goodses, opts ...grpc.CallOption) (*ErrorCode, error)
}

type shopManageClient struct {
	cc grpc.ClientConnInterface
}

func NewShopManageClient(cc grpc.ClientConnInterface) ShopManageClient {
	return &shopManageClient{cc}
}

func (c *shopManageClient) Build(ctx context.Context, in *Shop, opts ...grpc.CallOption) (*ErrorCode, error) {
	out := new(ErrorCode)
	err := c.cc.Invoke(ctx, "/common.ShopManage/Build", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopManageClient) SetLogo(ctx context.Context, in *Logo, opts ...grpc.CallOption) (*ErrorCode, error) {
	out := new(ErrorCode)
	err := c.cc.Invoke(ctx, "/common.ShopManage/SetLogo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopManageClient) AddImage(ctx context.Context, in *ShopImages, opts ...grpc.CallOption) (*ErrorCode, error) {
	out := new(ErrorCode)
	err := c.cc.Invoke(ctx, "/common.ShopManage/AddImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shopManageClient) AddGoods(ctx context.Context, in *Goodses, opts ...grpc.CallOption) (*ErrorCode, error) {
	out := new(ErrorCode)
	err := c.cc.Invoke(ctx, "/common.ShopManage/AddGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShopManageServer is the server API for ShopManage service.
type ShopManageServer interface {
	Build(context.Context, *Shop) (*ErrorCode, error)
	SetLogo(context.Context, *Logo) (*ErrorCode, error)
	AddImage(context.Context, *ShopImages) (*ErrorCode, error)
	AddGoods(context.Context, *Goodses) (*ErrorCode, error)
}

// UnimplementedShopManageServer can be embedded to have forward compatible implementations.
type UnimplementedShopManageServer struct {
}

func (*UnimplementedShopManageServer) Build(ctx context.Context, req *Shop) (*ErrorCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Build not implemented")
}
func (*UnimplementedShopManageServer) SetLogo(ctx context.Context, req *Logo) (*ErrorCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLogo not implemented")
}
func (*UnimplementedShopManageServer) AddImage(ctx context.Context, req *ShopImages) (*ErrorCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddImage not implemented")
}
func (*UnimplementedShopManageServer) AddGoods(ctx context.Context, req *Goodses) (*ErrorCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGoods not implemented")
}

func RegisterShopManageServer(s *grpc.Server, srv ShopManageServer) {
	s.RegisterService(&_ShopManage_serviceDesc, srv)
}

func _ShopManage_Build_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Shop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopManageServer).Build(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.ShopManage/Build",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopManageServer).Build(ctx, req.(*Shop))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopManage_SetLogo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Logo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopManageServer).SetLogo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.ShopManage/SetLogo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopManageServer).SetLogo(ctx, req.(*Logo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopManage_AddImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopImages)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopManageServer).AddImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.ShopManage/AddImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopManageServer).AddImage(ctx, req.(*ShopImages))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShopManage_AddGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Goodses)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopManageServer).AddGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.ShopManage/AddGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopManageServer).AddGoods(ctx, req.(*Goodses))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShopManage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.ShopManage",
	HandlerType: (*ShopManageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Build",
			Handler:    _ShopManage_Build_Handler,
		},
		{
			MethodName: "SetLogo",
			Handler:    _ShopManage_SetLogo_Handler,
		},
		{
			MethodName: "AddImage",
			Handler:    _ShopManage_AddImage_Handler,
		},
		{
			MethodName: "AddGoods",
			Handler:    _ShopManage_AddGoods_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "business.proto",
}
